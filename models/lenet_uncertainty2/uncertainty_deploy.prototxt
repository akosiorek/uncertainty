name: "UncertaintyNetTest"
input: "data"
input_dim: 1
input_dim: 1
input_dim: 28
input_dim: 28
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
  } 
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}

layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
  }
}

layer {
  name: "ip_unc1"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip_unc1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
  }
}

layer {
  name: "relu_unc1"
  type: "ReLU"
  bottom: "ip_unc1"
  top: "ip_unc1"
}

layer {
  name: "drop_unc1"
  type: "Dropout"
  bottom: "ip_unc1"
  top: "ip_unc1"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "uncertainty"
  type: "InnerProduct"
  bottom: "ip_unc1"
  top: "uncertainty_raw"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 1
  }
}

layer {
  name: "uncertainty_sigmoid"
  type: "Sigmoid"
  bottom: "uncertainty_raw"
  top: "uncertainty"
}

layer {
  name: "probs"
  type: "Softmax"
  bottom: "ip2"
  top: "probs"
}
